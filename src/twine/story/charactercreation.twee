:: cc: part 1
What's your name?
<<textbox '$player.name' ''>>

[[Continue.->cc: part 2]]

:: cc: part 2
What are your pronouns?

<<link 'they / them' 'cc: part 3'>><<set $pronouns to 'they'>><</link>>
<<link 'she / her' 'cc: part 3'>><<set $pronouns to 'she'>><</link>>
<<link 'he / him' 'cc: part 3'>><<set $pronouns to 'he'>><</link>>

:: cc: part 3
What do you like most about Mergimals?

<<link 'Competing in contests.' 'cc: part 4'>><<set $player.noun to 'trainer'>><</link>>
<<link 'Collecting as many as I can.' 'cc: part 4'>><<set $player.noun to 'explorer'>><</link>>
<<link 'Merging them to make new ones.' 'cc: part 4'>><<set $player.noun to 'scientist'>><</link>>
<<link 'Being a good friend to them.' 'cc: part 4'>><<set $player.noun to 'companion'>><</link>>

:: cc: part 4
Which of these statements fits you best?

<<link 'I notice every detail.' 'cc: part 5'>><<set $stats.attention to 'd8'>><<set $high to 'attention'>><</link>>
<<link 'I never give up.' 'cc: part 5'>><<set $stats.grit to 'd8'>><<set $high to 'grit'>><</link>>
<<link 'I remember everything.' 'cc: part 5'>><<set $stats.memory to 'd8'>><<set $high to 'memory'>><</link>>
<<link 'I understand emotions.' 'cc: part 5'>><<set $stats.empathy to 'd8'>><<set $high to 'empathy'>><</link>>

:: cc: part 5 [nobr]
Which of these statements fits you best?<br /><br />
<<if $high != 'attention'>><<link 'I can\'t stay still.' 'cc: part 6'>><<set $stats.attention to 'd4'>><</link>><br /><</if>>
<<if $high != 'grit'>><<link 'I don\'t like to fail.' 'cc: part 6'>><<set $stats.grit to 'd4'>><</link>><br /><</if>>
<<if $high != 'memory'>><<link 'I lose things often.' 'cc: part 6'>><<set $stats.memory to 'd4'>><</link>><br /><</if>>
<<if $high != 'empathy'>><<link 'I don\'t understand emotions.' 'cc: part 6'>><<set $stats.empathy to 'd4'>><</link>><</if>>

:: cc: part 6
You may allocate the following stats:<<set _newstats = {attention: '', grit: '', memory: '', empathy: ''}>>

<<nobr>>
    <div class='grid bg-lighter rounded' style='grid-template: 1fr / repeat(4, 1fr); gap: 0.5rem; 
        margin-bottom: 0.5rem; align-items: center; justify-items: center; padding: 1rem; width: 16rem;'>
        <div id='stat-1-drop' style='grid-area: 1 / 1;' class='droppable'></div>
        <div id='stat-2-drop' style='grid-area: 1 / 2;' class='droppable'></div>
        <div id='stat-3-drop' style='grid-area: 1 / 3;' class='droppable'></div>
        <div id='stat-4-drop' style='grid-area: 1 / 4;' class='droppable'></div>
        <div id='stat-1' style='grid-area: 1 / 1;' class='draggable dice text-xl'>d4</div>
        <div id='stat-2' style='grid-area: 1 / 2;' class='draggable dice text-xl'>d6</div>
        <div id='stat-3' style='grid-area: 1 / 3;' class='draggable dice text-xl'>d6</div>
        <div id='stat-4' style='grid-area: 1 / 4;' class='draggable dice text-xl'>d8</div>
    </div>
<<include 'stat-box'>>

<</nobr>>

<<button 'reset'>>

<</button>>
<<button 'submit'>>
    <<script>>
        let _stats = State.getVar('_newstats');
        let _$statDraggables = $('.draggable');
        $.each(_$statDraggables, function (_index, _$statDraggable) {
            console.log(_$statDraggable);
            console.log(_$statDraggable.text());
        });
        //console.log(_statDraggables);
        //console.log(_stats);
    <</script>>
<</button>>

<<done>>
    <<script>>
        $( function() {
            $('.draggable').draggable({
                revert: 'invalid',
                revertDuration: 200,
                snap: '.droppable',
                snapMode: 'inner'
            });

            $('.droppable').droppable({
                drop: function(event, ui) {
                    // finds the offset of the droppable being called
                    const _pos = $(this).offset();
                    // sets the offset of the dropped item to the above value
                    ui.draggable.offset(_pos);
                    console.log(State.getVar('$stats'))
                }
            });
        });
    <</script>>
<</done>>